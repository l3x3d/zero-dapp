"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/getNftsForOwner";
exports.ids = ["pages/api/getNftsForOwner"];
exports.modules = {

/***/ "alchemy-sdk":
/*!******************************!*\
  !*** external "alchemy-sdk" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("alchemy-sdk");

/***/ }),

/***/ "(api)/./pages/api/getNftsForOwner.js":
/*!**************************************!*\
  !*** ./pages/api/getNftsForOwner.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alchemy-sdk */ \"alchemy-sdk\");\n/* harmony import */ var alchemy_sdk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__);\n\nasync function handler(req, res) {\n    const { address , pageSize , chain , excludeFilter , pageKey  } = JSON.parse(req.body);\n    if (req.method !== \"POST\") {\n        res.status(405).send({\n            message: \"Only POST requests allowed\"\n        });\n        return;\n    }\n    const settings = {\n        apiKey: process.env.ALCHEMY_API_KEY,\n        network: alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Network[chain]\n    };\n    const alchemy = new alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Alchemy(settings);\n    try {\n        const nfts = await alchemy.nft.getNftsForOwner(address, {\n            pageSize: pageSize ? pageSize : 100,\n            excludeFilters: excludeFilter && [\n                alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.NftFilters.SPAM\n            ],\n            pageKey: pageKey ? pageKey : \"\"\n        });\n        const formattedNfts = nfts.ownedNfts.map((nft)=>{\n            const { contract , title , tokenType , tokenId , description , media  } = nft;\n            console.log(nft.media);\n            return {\n                contract: contract.address,\n                symbol: contract.symbol,\n                collectionName: contract.openSea?.collectionName,\n                media: media[0]?.gateway ? media[0]?.gateway : \"https://via.placeholder.com/500\",\n                verified: contract.openSea?.safelistRequestStatus,\n                tokenType,\n                tokenId,\n                title,\n                description,\n                format: media[0]?.format ? media[0]?.format : \"png\"\n            };\n        });\n        if (excludeFilter) {\n            const filteredNfts = formattedNfts.filter((nft)=>nft.title.length && nft.description.length && nft.media);\n            if (filteredNfts) {\n                res.status(200).json({\n                    nfts: filteredNfts.length ? filteredNfts : null,\n                    pageKey: nfts.pageKey\n                });\n            }\n        } else {\n            res.status(200).json({\n                nfts: formattedNfts.length ? formattedNfts : null,\n                pageKey: nfts.pageKey\n            });\n        }\n    } catch (e) {\n        console.warn(e);\n        res.status(500).send({\n            message: \"something went wrong, check the log in your terminal\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZ2V0TmZ0c0Zvck93bmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyRDtBQUU1QyxlQUFlRyxRQUFRQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUMvQyxNQUFNLEVBQUVDLFFBQU8sRUFBRUMsU0FBUSxFQUFFQyxNQUFLLEVBQUVDLGNBQWEsRUFBRUMsUUFBTyxFQUFFLEdBQUdDLEtBQUtDLEtBQUssQ0FDdEVSLElBQUlTLElBQUk7SUFFVCxJQUFJVCxJQUFJVSxNQUFNLEtBQUssUUFBUTtRQUMxQlQsSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxTQUFTO1FBQTZCO1FBQzdEO0lBQ0QsQ0FBQztJQUVELE1BQU1DLFdBQVc7UUFDaEJDLFFBQVFDLFFBQVFDLEdBQUcsQ0FBQ0MsZUFBZTtRQUNuQ0MsU0FBU3ZCLGdEQUFPLENBQUNRLE1BQU07SUFDeEI7SUFFQSxNQUFNZ0IsVUFBVSxJQUFJdkIsZ0RBQU9BLENBQUNpQjtJQUU1QixJQUFJO1FBQ0gsTUFBTU8sT0FBTyxNQUFNRCxRQUFRRSxHQUFHLENBQUNDLGVBQWUsQ0FBQ3JCLFNBQVM7WUFDdkRDLFVBQVVBLFdBQVdBLFdBQVcsR0FBRztZQUNuQ3FCLGdCQUFnQm5CLGlCQUFpQjtnQkFBQ1Asd0RBQWU7YUFBQztZQUNsRFEsU0FBU0EsVUFBVUEsVUFBVSxFQUFFO1FBQ2hDO1FBRUEsTUFBTW9CLGdCQUFnQkwsS0FBS00sU0FBUyxDQUFDQyxHQUFHLENBQUMsQ0FBQ04sTUFBUTtZQUNqRCxNQUFNLEVBQUVPLFNBQVEsRUFBRUMsTUFBSyxFQUFFQyxVQUFTLEVBQUVDLFFBQU8sRUFBRUMsWUFBVyxFQUFFQyxNQUFLLEVBQUUsR0FDaEVaO1lBQ0RhLFFBQVFDLEdBQUcsQ0FBQ2QsSUFBSVksS0FBSztZQUNyQixPQUFPO2dCQUNOTCxVQUFVQSxTQUFTM0IsT0FBTztnQkFDMUJtQyxRQUFRUixTQUFTUSxNQUFNO2dCQUN2QkMsZ0JBQWdCVCxTQUFTVSxPQUFPLEVBQUVEO2dCQUNsQ0osT0FBT0EsS0FBSyxDQUFDLEVBQUUsRUFBRU0sVUFDZE4sS0FBSyxDQUFDLEVBQUUsRUFBRU0sVUFDVixpQ0FBaUM7Z0JBQ3BDQyxVQUFVWixTQUFTVSxPQUFPLEVBQUVHO2dCQUM1Qlg7Z0JBQ0FDO2dCQUNBRjtnQkFDQUc7Z0JBQ0FVLFFBQVFULEtBQUssQ0FBQyxFQUFFLEVBQUVTLFNBQVNULEtBQUssQ0FBQyxFQUFFLEVBQUVTLFNBQVMsS0FBSztZQUNwRDtRQUNEO1FBQ0EsSUFBSXRDLGVBQWU7WUFDbEIsTUFBTXVDLGVBQWVsQixjQUFjbUIsTUFBTSxDQUN4QyxDQUFDdkIsTUFBUUEsSUFBSVEsS0FBSyxDQUFDZ0IsTUFBTSxJQUFJeEIsSUFBSVcsV0FBVyxDQUFDYSxNQUFNLElBQUl4QixJQUFJWSxLQUFLO1lBRWpFLElBQUlVLGNBQWM7Z0JBQ2pCM0MsSUFBSVUsTUFBTSxDQUFDLEtBQUtvQyxJQUFJLENBQUM7b0JBQ3BCMUIsTUFBTXVCLGFBQWFFLE1BQU0sR0FBR0YsZUFBZSxJQUFJO29CQUMvQ3RDLFNBQVNlLEtBQUtmLE9BQU87Z0JBQ3RCO1lBQ0QsQ0FBQztRQUNGLE9BQU87WUFDTkwsSUFBSVUsTUFBTSxDQUFDLEtBQUtvQyxJQUFJLENBQUM7Z0JBQ3BCMUIsTUFBTUssY0FBY29CLE1BQU0sR0FBR3BCLGdCQUFnQixJQUFJO2dCQUNqRHBCLFNBQVNlLEtBQUtmLE9BQU87WUFDdEI7UUFDRCxDQUFDO0lBQ0YsRUFBRSxPQUFPMEMsR0FBRztRQUNYYixRQUFRYyxJQUFJLENBQUNEO1FBQ2IvQyxJQUFJVSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ3BCQyxTQUFTO1FBQ1Y7SUFDRDtBQUNELENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96ZXJvLWRhcHAvLi9wYWdlcy9hcGkvZ2V0TmZ0c0Zvck93bmVyLmpzP2Y0NjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV0d29yaywgQWxjaGVteSwgTmZ0RmlsdGVycyB9IGZyb20gXCJhbGNoZW15LXNka1wiO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XG5cdGNvbnN0IHsgYWRkcmVzcywgcGFnZVNpemUsIGNoYWluLCBleGNsdWRlRmlsdGVyLCBwYWdlS2V5IH0gPSBKU09OLnBhcnNlKFxuXHRcdHJlcS5ib2R5XG5cdCk7XG5cdGlmIChyZXEubWV0aG9kICE9PSBcIlBPU1RcIikge1xuXHRcdHJlcy5zdGF0dXMoNDA1KS5zZW5kKHsgbWVzc2FnZTogXCJPbmx5IFBPU1QgcmVxdWVzdHMgYWxsb3dlZFwiIH0pO1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGNvbnN0IHNldHRpbmdzID0ge1xuXHRcdGFwaUtleTogcHJvY2Vzcy5lbnYuQUxDSEVNWV9BUElfS0VZLFxuXHRcdG5ldHdvcms6IE5ldHdvcmtbY2hhaW5dLFxuXHR9O1xuXG5cdGNvbnN0IGFsY2hlbXkgPSBuZXcgQWxjaGVteShzZXR0aW5ncyk7XG5cblx0dHJ5IHtcblx0XHRjb25zdCBuZnRzID0gYXdhaXQgYWxjaGVteS5uZnQuZ2V0TmZ0c0Zvck93bmVyKGFkZHJlc3MsIHtcblx0XHRcdHBhZ2VTaXplOiBwYWdlU2l6ZSA/IHBhZ2VTaXplIDogMTAwLFxuXHRcdFx0ZXhjbHVkZUZpbHRlcnM6IGV4Y2x1ZGVGaWx0ZXIgJiYgW05mdEZpbHRlcnMuU1BBTV0sXG5cdFx0XHRwYWdlS2V5OiBwYWdlS2V5ID8gcGFnZUtleSA6IFwiXCIsXG5cdFx0fSk7XG5cblx0XHRjb25zdCBmb3JtYXR0ZWROZnRzID0gbmZ0cy5vd25lZE5mdHMubWFwKChuZnQpID0+IHtcblx0XHRcdGNvbnN0IHsgY29udHJhY3QsIHRpdGxlLCB0b2tlblR5cGUsIHRva2VuSWQsIGRlc2NyaXB0aW9uLCBtZWRpYSB9ID1cblx0XHRcdFx0bmZ0O1xuXHRcdFx0Y29uc29sZS5sb2cobmZ0Lm1lZGlhKTtcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdGNvbnRyYWN0OiBjb250cmFjdC5hZGRyZXNzLFxuXHRcdFx0XHRzeW1ib2w6IGNvbnRyYWN0LnN5bWJvbCxcblx0XHRcdFx0Y29sbGVjdGlvbk5hbWU6IGNvbnRyYWN0Lm9wZW5TZWE/LmNvbGxlY3Rpb25OYW1lLFxuXHRcdFx0XHRtZWRpYTogbWVkaWFbMF0/LmdhdGV3YXlcblx0XHRcdFx0XHQ/IG1lZGlhWzBdPy5nYXRld2F5XG5cdFx0XHRcdFx0OiBcImh0dHBzOi8vdmlhLnBsYWNlaG9sZGVyLmNvbS81MDBcIixcblx0XHRcdFx0dmVyaWZpZWQ6IGNvbnRyYWN0Lm9wZW5TZWE/LnNhZmVsaXN0UmVxdWVzdFN0YXR1cyxcblx0XHRcdFx0dG9rZW5UeXBlLFxuXHRcdFx0XHR0b2tlbklkLFxuXHRcdFx0XHR0aXRsZSxcblx0XHRcdFx0ZGVzY3JpcHRpb24sXG5cdFx0XHRcdGZvcm1hdDogbWVkaWFbMF0/LmZvcm1hdCA/IG1lZGlhWzBdPy5mb3JtYXQgOiBcInBuZ1wiLFxuXHRcdFx0fTtcblx0XHR9KTtcblx0XHRpZiAoZXhjbHVkZUZpbHRlcikge1xuXHRcdFx0Y29uc3QgZmlsdGVyZWROZnRzID0gZm9ybWF0dGVkTmZ0cy5maWx0ZXIoXG5cdFx0XHRcdChuZnQpID0+IG5mdC50aXRsZS5sZW5ndGggJiYgbmZ0LmRlc2NyaXB0aW9uLmxlbmd0aCAmJiBuZnQubWVkaWFcblx0XHRcdCk7XG5cdFx0XHRpZiAoZmlsdGVyZWROZnRzKSB7XG5cdFx0XHRcdHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcblx0XHRcdFx0XHRuZnRzOiBmaWx0ZXJlZE5mdHMubGVuZ3RoID8gZmlsdGVyZWROZnRzIDogbnVsbCxcblx0XHRcdFx0XHRwYWdlS2V5OiBuZnRzLnBhZ2VLZXksXG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXMuc3RhdHVzKDIwMCkuanNvbih7XG5cdFx0XHRcdG5mdHM6IGZvcm1hdHRlZE5mdHMubGVuZ3RoID8gZm9ybWF0dGVkTmZ0cyA6IG51bGwsXG5cdFx0XHRcdHBhZ2VLZXk6IG5mdHMucGFnZUtleSxcblx0XHRcdH0pO1xuXHRcdH1cblx0fSBjYXRjaCAoZSkge1xuXHRcdGNvbnNvbGUud2FybihlKTtcblx0XHRyZXMuc3RhdHVzKDUwMCkuc2VuZCh7XG5cdFx0XHRtZXNzYWdlOiBcInNvbWV0aGluZyB3ZW50IHdyb25nLCBjaGVjayB0aGUgbG9nIGluIHlvdXIgdGVybWluYWxcIixcblx0XHR9KTtcblx0fVxufVxuIl0sIm5hbWVzIjpbIk5ldHdvcmsiLCJBbGNoZW15IiwiTmZ0RmlsdGVycyIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJhZGRyZXNzIiwicGFnZVNpemUiLCJjaGFpbiIsImV4Y2x1ZGVGaWx0ZXIiLCJwYWdlS2V5IiwiSlNPTiIsInBhcnNlIiwiYm9keSIsIm1ldGhvZCIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwic2V0dGluZ3MiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiQUxDSEVNWV9BUElfS0VZIiwibmV0d29yayIsImFsY2hlbXkiLCJuZnRzIiwibmZ0IiwiZ2V0TmZ0c0Zvck93bmVyIiwiZXhjbHVkZUZpbHRlcnMiLCJTUEFNIiwiZm9ybWF0dGVkTmZ0cyIsIm93bmVkTmZ0cyIsIm1hcCIsImNvbnRyYWN0IiwidGl0bGUiLCJ0b2tlblR5cGUiLCJ0b2tlbklkIiwiZGVzY3JpcHRpb24iLCJtZWRpYSIsImNvbnNvbGUiLCJsb2ciLCJzeW1ib2wiLCJjb2xsZWN0aW9uTmFtZSIsIm9wZW5TZWEiLCJnYXRld2F5IiwidmVyaWZpZWQiLCJzYWZlbGlzdFJlcXVlc3RTdGF0dXMiLCJmb3JtYXQiLCJmaWx0ZXJlZE5mdHMiLCJmaWx0ZXIiLCJsZW5ndGgiLCJqc29uIiwiZSIsIndhcm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/getNftsForOwner.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/getNftsForOwner.js"));
module.exports = __webpack_exports__;

})();